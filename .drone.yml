kind: pipeline
type: kubernetes
name: default

steps:

- name: publish-ws-tunnel-asset
  image: golang:1.14.1
  environment:
    LINUX_ASSET_NAME: ws-tunnel_linux_amd64.tar.gz
    WINDOWS_ASSET_NAME: ws-tunnel_windows_amd64.tar.gz
    DARWIN_ASSET_NAME: ws-tunnel_darwin_amd64.tar.gz
    RELEASE_MESSAGE: "This release was automatically compiled and uploaded using Go 1.11.4"      
    GITHUB_ACCESS_TOKEN:
      from_secret: GITHUB_ACCESS_TOKEN
  commands:
    - cd /drone/src/images/ws-tunnel/client
    - CGO_ENABLED=0 GOOS=linux go build -o ws-tunnel app.go
    - tar -czvf $LINUX_ASSET_NAME ws-tunnel
    - CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o ws-tunnel.exe app.go
    - tar -czvf $WINDOWS_ASSET_NAME ws-tunnel.exe
    - rm ws-tunnel
    - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o ws-tunnel app.go
    - tar -czvf $DARWIN_ASSET_NAME ws-tunnel
    - >
      release=$(curl -XPOST -H "Authorization:token $GITHUB_ACCESS_TOKEN" --data "{\"tag_name\": \"$DRONE_TAG\", \"target_commitish\": \"$DRONE_REPO_BRANCH\", 
      \"name\": \"$DRONE_TAG\", \"body\": \"$RELEASE_MESSAGE\", \"draft\": false, \"prerelease\": false}" https://api.github.com/repos/$DRONE_REPO/releases)
    - echo $release
    - >
      id=$(echo "$release" | grep -Po '"id": \K([0-9])+' | head -n 1)
    - echo $id
    - >
      curl -XPOST -H "Authorization:token $GITHUB_ACCESS_TOKEN" -H "Content-Type:application/octet-stream" --data-binary @$LINUX_ASSET_NAME 
      https://uploads.github.com/repos/$DRONE_REPO/releases/$id/assets?name=$LINUX_ASSET_NAME
    - >
      curl -XPOST -H "Authorization:token $GITHUB_ACCESS_TOKEN" -H "Content-Type:application/octet-stream" --data-binary @$WINDOWS_ASSET_NAME 
      https://uploads.github.com/repos/$DRONE_REPO/releases/$id/assets?name=$WINDOWS_ASSET_NAME
    - >
      curl -XPOST -H "Authorization:token $GITHUB_ACCESS_TOKEN" -H "Content-Type:application/octet-stream" --data-binary @$DARWIN_ASSET_NAME 
      https://uploads.github.com/repos/$DRONE_REPO/releases/$id/assets?name=$DARWIN_ASSET_NAME
  when:
    branch:
    - master
    event:
    - tag

- name: publish-vscode-image
  image: plugins/docker
  settings:
    registry: raizenanalyticsdev.azurecr.io
    repo: raizenanalyticsdev.azurecr.io/code-server
    auto_tag: true
    cache: true
    username: raizenanalyticsdev
    password:
      from_secret: azure-registry-key
    context: /drone/src/images/code-server/
  resources:
    requests:
      memory: 2GiB
  when:
    branch:
    - master
    - airflow2
    event:
    - tag

- name: publish-ws-tunnel-server
  image: banzaicloud/drone-kaniko:0.5.1
  settings:
    registry: raizenanalyticsdev.azurecr.io
    repo: ws-tunnel-server
    auto_tag: true
    cache: true
    username: raizenanalyticsdev
    password:
      from_secret: azure-registry-key
    context: /drone/src/images/ws-tunnel/server
  resources:
    requests:
      memory: 2GiB
  when:
    branch:
    - master
    event:
    - tag

- name: publish-ws-tunnel-client
  image: banzaicloud/drone-kaniko:0.5.1
  settings:
    registry: raizenanalyticsdev.azurecr.io
    repo: ws-tunnel-client
    auto_tag: true
    cache: true
    username: raizenanalyticsdev
    password:
      from_secret: azure-registry-key
    context: /drone/src/images/ws-tunnel/client
  resources:
    requests:
      memory: 2GiB
  when:
    branch:
    - master
    event:
    - tag