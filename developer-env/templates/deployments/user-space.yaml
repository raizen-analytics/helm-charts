{{- $root := . -}}
{{- range .Values.users }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{lower .username}}-space
  namespace: {{ $root.Release.Namespace | quote }}
  labels:
    app: {{lower .username}}-space
    turn-off: "yes"
    type: user-space
    owner: {{.username}}
spec:
  # replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{lower .username}}-space
  template:
    metadata:
      labels:
        app: {{lower .username}}-space
        type: user-space
        owner: {{.username}}
    spec:
      serviceAccountName: airflow-scheduler
      initContainers:
      - name: bash-command
        image: raizenanalyticsdev.azurecr.io/docker.io/bash:5.2.26
        command: ["chown", "-R", "1000:1000", "/volume"]
        volumeMounts:
        - mountPath: /volume
          name: user-disk
        - mountPath: /volume/project
          name: user-disk
          subPath: project
        imagePullPolicy: IfNotPresent
      # - name: registry-credentials
      #   image: registry:2.6
      #   {{- if $root.Values.applications.registry.admin.enabled}}
      #   command: ["/bin/sh", "-c", "htpasswd -Bbc /auth/htpasswd {{lower .username}} $(USER_PASSWORD) && htpasswd -Bb /auth/htpasswd $(ADMIN_USER) $(ADMIN_PASSWORD)"]
      #   {{ else }}
      #   command: ["htpasswd", "-Bbc", "/auth/htpasswd", "{{lower .username}}", "$(USER_PASSWORD)"]
      #   {{ end }}
      #   env:
      #   - name: USER_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         name: {{lower .username}}-registry-secret
      #         key: password
      #   {{- if $root.Values.applications.registry.admin.enabled}}
      #   - name: ADMIN_USER
      #     valueFrom:
      #       secretKeyRef:
      #         name: {{ $root.Values.applications.registry.admin.secret }}
      #         key: username
      #   - name: ADMIN_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         name: {{ $root.Values.applications.registry.admin.secret }}
      #         key: password
      #   {{- end }}
      #   - name: FORCE_RELOAD
      #     value: {{randAlphaNum 16 | quote}}
      #   volumeMounts:
      #   - mountPath: /auth
      #     name: user-disk
      #     subPath: auth
      #   imagePullPolicy: IfNotPresent 
      containers:
      - name: nginx
        image: raizenanalyticsdev.azurecr.io/docker.io/nginx:1.27.0
        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
            name: user-proxy-cfg
          - mountPath: /usr/share/nginx/html/index.html
            subPath: index.html
            name: user-apps-html
          # - mountPath: /usr/share/nginx/html/password
          #   name: registry-secret
          #   subPath: password
        imagePullPolicy: IfNotPresent
      - name: vscode
        {{- if $root.Values.applications.vscode.command }}
        command: {{- toYaml $root.Values.applications.vscode.command | nindent 10}}
        {{- end }}
        {{- if $root.Values.applications.vscode.args }}
        args: {{- toYaml $root.Values.applications.vscode.args | nindent 10}}
        {{- end }}
        # args: ['code-server','--host','0.0.0.0', '.', '--auth', 'none', '--port', '29901']
        image: {{ $root.Values.applications.vscode.image }}
        env:
        - name: USERNAME
          value: {{lower .username}}
        - name: K8S_USER
          value: {{lower .username}}
        - name: K8S_KANIKO_VOLUME_SUBPATH
          value: kaniko
        - name: K8S_KANIKO_VOLUME_CLAIM
          value: {{lower .username}}-file-data
        # - name: K8S_REGISTRY_SECRET_NAME
        #   value: {{lower .username}}-registry-secret
        - name: K8S_NAMESPACE
          value: {{ $root.Release.Namespace | quote }}
        - name: MLFLOW_TRACKING_URI
          value: http://shared-space:5000
        - name: MEMCACHE_HOST
          value: memcache
        - name: MEMCACHE_PORT
          value: '11211'
        - name: MEMCACHE_KEY_PREFIX
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['owner']
        ports:
        - containerPort: 29901
        resources: {{- toYaml $root.Values.applications.vscode.resources | nindent 10}}
        # resources: 
        #   requests:
        #     memory: 200Mi
        volumeMounts:
        - mountPath: /home/coder/
          name: user-disk
        - mountPath: /home/coder/project/
          name: user-disk
          subPath: project
        - mountPath: /home/coder/airflow/dags
          name: airflow-dags
          subPath: dags
        - mountPath: /home/coder/kaniko
          name: user-file-data
          subPath: kaniko
        - mountPath: /home/coder/shared
          name: shared-file
        imagePullPolicy: IfNotPresent
      - name: jupyter
        image: {{ $root.Values.applications.jupyter.image }}
        {{- if $root.Values.applications.jupyter.command }}
        command: {{- toYaml $root.Values.applications.jupyter.command | nindent 10}}
        {{- end }}
        {{- if $root.Values.applications.jupyter.args }}
        args: {{- toYaml $root.Values.applications.jupyter.args | nindent 10}}
        {{- end }}
        # args: ["jupyter", "lab", "--ip", "0.0.0.0", "--NotebookApp.token=''", "--NotebookApp.base_url=/jupyter", "--port", "29902"]
        env:
        - name: MLFLOW_TRACKING_URI
          value: http://shared-space:5000
        - name: USERNAME
          value: {{lower .username}}
        - name: MEMCACHE_HOST
          value: memcache
        - name: MEMCACHE_PORT
          value: '11211'
        - name: MEMCACHE_KEY_PREFIX
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['owner']
        ports:
        - containerPort: 29902
        resources: {{- toYaml $root.Values.applications.jupyter.resources | nindent 10}}
        volumeMounts:
        - mountPath: /home/coder/
          name: user-disk
        - mountPath: /home/coder/project/
          name: user-disk
          subPath: project
        - mountPath: /home/coder/airflow/dags
          name: airflow-dags
          subPath: dags
        - mountPath: /home/coder/kaniko
          name: user-file-data
          subPath: kaniko
        - mountPath: /home/coder/shared
          name: shared-file
        imagePullPolicy: IfNotPresent
      {{- if $root.Values.applications.rstudio.enabled }}
      - name: rstudio
        {{- if $root.Values.applications.rstudio.command }}
        command: {{- toYaml $root.Values.applications.rstudio.command | nindent 10}}
        {{- end }}
        {{- if $root.Values.applications.rstudio.args }}
        args: {{- toYaml $root.Values.applications.rstudio.args | nindent 10}}
        {{- end }}
        # args: ['code-server','--host','0.0.0.0', '.', '--auth', 'none', '--port', '29901']
        image: {{ $root.Values.applications.rstudio.image }}
        env:
        - name: USERNAME
          value: {{lower .username}}
        - name: K8S_USER
          value: {{lower .username}}
        - name: USER
          value: {{lower .username}}
        - name: K8S_KANIKO_VOLUME_SUBPATH
          value: kaniko
        - name: K8S_KANIKO_VOLUME_CLAIM
          value: {{lower .username}}-file-data
        - name: K8S_REGISTRY_SECRET_NAME
          value: {{lower .username}}-registry-secret
        - name: K8S_NAMESPACE
          value: {{ $root.Release.Namespace | quote }}
        - name: MLFLOW_TRACKING_URI
          value: http://shared-space:5000
        ports:
        - containerPort: 29901
        resources: {{- toYaml $root.Values.applications.rstudio.resources | nindent 10}}
        # resources: 
        #   requests:
        #     memory: 200Mi
        volumeMounts:
        - mountPath: /home/coder/
          name: user-disk
        - mountPath: /home/coder/project/
          name: user-disk
          subPath: project
        - mountPath: /home/coder/airflow/dags
          name: airlfow-dags
          subPath: dags
        - mountPath: /home/coder/kaniko
          name: user-file-data
          subPath: kaniko
        - mountPath: /home/coder/shared
          name: shared-file
        imagePullPolicy: IfNotPresent
      {{- end }}
      - name: memcached
        image: raizenanalyticsdev.azurecr.io/docker.io/memcached:1.6.29
        ports:
        - containerPort: 11211
        resources: 
          requests:
            memory: 32Mi
      - name: firefox
        image: raizenanalyticsdev.azurecr.io/developer-env/firefox
        env:
        - name: DISPLAY_WIDTH
          value: '1920'
        - name: DISPLAY_HEIGHT
          value: '1080'
        ports:
        - containerPort: 5800
        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
        imagePullPolicy: IfNotPresent
      - name: ws-tunnel
        image: raizenanalyticsdev.azurecr.io/ws-tunnel-server
        args: ['-addr', 'localhost:22', '-path', 'ssh']
        ports:
          - containerPort: 9191
      imagePullSecrets: {{- toYaml $root.Values.imagePullSecrets | nindent 8 }}
      {{- if .nodeSelector}}
      nodeSelector: {{- toYaml .nodeSelector | nindent 8}}
      {{- else if $root.Values.nodeSelector }}
      nodeSelector: {{- toYaml $root.Values.nodeSelector | nindent 8}}
      {{- end }}
      {{- if $root.Values.tolerations }}
      tolerations: {{- toYaml $root.Values.tolerations | nindent 8}}
      {{- end }}
      volumes:
        - name: user-disk
          persistentVolumeClaim:
            claimName: {{lower .username}}-disk
        - name: user-file-data
          persistentVolumeClaim:
            claimName: {{lower .username}}-file-data
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags
        - name: shared-file
          persistentVolumeClaim:
            claimName: shared-file
        - name: user-proxy-cfg
          configMap:
            name: {{lower .username}}-nginx-cfg
            items:
            - key: default.conf
              path: default.conf
        - name: user-apps-html
          configMap:
            name: {{lower .username}}-apps-html
            items:
            - key: index.html
              path: index.html
        - name: dshm
          emptyDir:
            medium: Memory
{{- end }}