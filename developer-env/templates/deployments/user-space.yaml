{{- $root := . -}}
{{- range .Values.users }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{lower .username}}-space
  namespace: {{ $root.Release.Namespace | quote }}
  labels:
    app: {{lower .username}}-space
    type: user-space
    owner: {{.username}}
spec:
  # replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{lower .username}}-space
  template:
    metadata:
      labels:
        app: {{lower .username}}-space
        type: user-space
        owner: {{.username}}
    spec:
      {{- if $root.Values.customScheduler}}
      schedulerName: {{ $root.Values.customScheduler }}
      {{- end }}
      serviceAccountName: airflow-scheduler
      initContainers:
      - name: bash-command
        image: bash
        command: ["chown", "-R", "1000:1000", "/volume"]
        volumeMounts:
        - mountPath: /volume
          name: user-disk
        - mountPath: /volume/project
          name: user-disk
          subPath: project
        imagePullPolicy: Always
      - name: remove-airflow-logs
        image: bash
        command: ["rm", "-rf", "/volume/*"]
        volumeMounts:
        - mountPath: /volume
          name: user-file-logs
        imagePullPolicy: Always
      # - name: registry-credentials
      #   image: registry:2.6
      #   {{- if $root.Values.applications.registry.admin.enabled}}
      #   command: ["/bin/sh", "-c", "htpasswd -Bbc /auth/htpasswd {{lower .username}} $(USER_PASSWORD) && htpasswd -Bb /auth/htpasswd $(ADMIN_USER) $(ADMIN_PASSWORD)"]
      #   {{ else }}
      #   command: ["htpasswd", "-Bbc", "/auth/htpasswd", "{{lower .username}}", "$(USER_PASSWORD)"]
      #   {{ end }}
      #   env:
      #   - name: USER_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         name: {{lower .username}}-registry-secret
      #         key: password
      #   {{- if $root.Values.applications.registry.admin.enabled}}
      #   - name: ADMIN_USER
      #     valueFrom:
      #       secretKeyRef:
      #         name: {{ $root.Values.applications.registry.admin.secret }}
      #         key: username
      #   - name: ADMIN_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         name: {{ $root.Values.applications.registry.admin.secret }}
      #         key: password
      #   {{- end }}
      #   - name: FORCE_RELOAD
      #     value: {{randAlphaNum 16 | quote}}
      #   volumeMounts:
      #   - mountPath: /auth
      #     name: user-disk
      #     subPath: auth
      #   imagePullPolicy: Always 
      containers:
      - name: oauth
        image: quay.io/pusher/oauth2_proxy:v6.1.1
        env:
        - name: OAUTH2_PROXY_PROVIDER
          value: {{ $root.Values.oauth.proxyProvider | quote }}
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: {{ $root.Values.oauth.cookieSecret | quote }}
        - name: OAUTH2_PROXY_CLIENT_ID
          value: {{ $root.Values.oauth.clientId | quote }}
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: {{ $root.Values.oauth.clientSecret | quote }}
        - name: OAUTH2_PROXY_EMAIL_DOMAINS
          value: {{ $root.Values.oauth.emailDomains | quote }}
        - name: OAUTH2_PROXY_UPSTREAMS
          value: http://localhost:80
        - name: OAUTH2_PROXY_HTTP_ADDRESS
          value: :29180
        - name: OAUTH2_PROXY_REDIRECT_URL
          value: {{ $root.Values.oauth.redirectUrl | quote }}
        resources:
          requests:
            memory: 10Mi
        ports:
        - containerPort: 29180
        imagePullPolicy: Always
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
            name: user-proxy-cfg
          - mountPath: /usr/share/nginx/html/index.html
            subPath: index.html
            name: user-apps-html
          # - mountPath: /usr/share/nginx/html/password
          #   name: registry-secret
          #   subPath: password
        imagePullPolicy: Always
      - name: vscode
        {{- if $root.Values.applications.vscode.command }}
        command: {{- toYaml $root.Values.applications.vscode.command | nindent 10}}
        {{- end }}
        {{- if $root.Values.applications.vscode.args }}
        args: {{- toYaml $root.Values.applications.vscode.args | nindent 10}}
        {{- end }}
        # args: ['code-server','--host','0.0.0.0', '.', '--auth', 'none', '--port', '29901']
        image: {{ $root.Values.applications.vscode.image }}
        env:
        - name: USERNAME
          value: {{lower .username}}
        - name: K8S_USER
          value: {{lower .username}}
        - name: K8S_KANIKO_VOLUME_SUBPATH
          value: kaniko
        - name: K8S_KANIKO_VOLUME_CLAIM
          value: {{lower .username}}-file-data
        # - name: K8S_REGISTRY_SECRET_NAME
        #   value: {{lower .username}}-registry-secret
        - name: K8S_NAMESPACE
          value: {{ $root.Release.Namespace | quote }}
        - name: MLFLOW_TRACKING_URI
          value: http://shared-space:5000
        ports:
        - containerPort: 29901
        resources: {{- toYaml $root.Values.applications.vscode.resources | nindent 10}}
        # resources: 
        #   requests:
        #     memory: 200Mi
        volumeMounts:
        - mountPath: /home/coder/
          name: user-disk
        - mountPath: /home/coder/project/
          name: user-disk
          subPath: project
        - mountPath: /home/coder/airflow/dags
          name: user-file-data
          subPath: dags
        - mountPath: /home/coder/airflow/plugins
          name: user-file-data
          subPath: plugins
        - mountPath: /home/coder/airflow/conf
          name: user-file-data
          subPath: conf
        - mountPath: /home/coder/airflow/worker-storage
          name: user-file-data
          subPath: worker-storage
        - mountPath: /home/coder/kaniko
          name: user-file-data
          subPath: kaniko
        - mountPath: /home/coder/shared
          name: shared-file
        - mountPath: /home/coder/airflow/logs
          name: user-file-logs
        imagePullPolicy: Always
      - name: jupyter
        image: {{ $root.Values.applications.jupyter.image }}
        {{- if $root.Values.applications.jupyter.command }}
        command: {{- toYaml $root.Values.applications.jupyter.command | nindent 10}}
        {{- end }}
        {{- if $root.Values.applications.jupyter.args }}
        args: {{- toYaml $root.Values.applications.jupyter.args | nindent 10}}
        {{- end }}
        # args: ["jupyter", "lab", "--ip", "0.0.0.0", "--NotebookApp.token=''", "--NotebookApp.base_url=/jupyter", "--port", "29902"]
        env:
        - name: MLFLOW_TRACKING_URI
          value: http://shared-space:5000
        - name: USERNAME
          value: {{lower .username}}
        ports:
        - containerPort: 29902
        resources: {{- toYaml $root.Values.applications.jupyter.resources | nindent 10}}
        volumeMounts:
        - mountPath: /home/coder/
          name: user-disk
        - mountPath: /home/coder/project/
          name: user-disk
          subPath: project
        - mountPath: /home/coder/airflow/dags
          name: user-file-data
          subPath: dags
        - mountPath: /home/coder/airflow/plugins
          name: user-file-data
          subPath: plugins
        - mountPath: /home/coder/airflow/conf
          name: user-file-data
          subPath: conf
        - mountPath: /home/coder/airflow/worker-storage
          name: user-file-data
          subPath: worker-storage
        - mountPath: /home/coder/airflow/logs
          name: user-file-logs
        - mountPath: /home/coder/kaniko
          name: user-file-data
          subPath: kaniko
        - mountPath: /home/coder/shared
          name: shared-file
        imagePullPolicy: Always
      - name: postgres
        image: postgres:9.6
        args: ['-p', '29432']
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_DB
          value: airflow
        - name: POSTGRES_PASSWORD
          value: airflow  
        - name: POSTGRES_USER
          value: airflow
        ports:
        - containerPort: 29432
        resources: 
          requests:
            memory: 128Mi
        imagePullPolicy: Always
      {{- if $root.Values.applications.rstudio.enabled }}
      - name: rstudio
        {{- if $root.Values.applications.rstudio.command }}
        command: {{- toYaml $root.Values.applications.rstudio.command | nindent 10}}
        {{- end }}
        {{- if $root.Values.applications.rstudio.args }}
        args: {{- toYaml $root.Values.applications.rstudio.args | nindent 10}}
        {{- end }}
        # args: ['code-server','--host','0.0.0.0', '.', '--auth', 'none', '--port', '29901']
        image: {{ $root.Values.applications.rstudio.image }}
        env:
        - name: USERNAME
          value: {{lower .username}}
        - name: K8S_USER
          value: {{lower .username}}
        - name: USER
          value: {{lower .username}}
        - name: K8S_KANIKO_VOLUME_SUBPATH
          value: kaniko
        - name: K8S_KANIKO_VOLUME_CLAIM
          value: {{lower .username}}-file-data
        - name: K8S_REGISTRY_SECRET_NAME
          value: {{lower .username}}-registry-secret
        - name: K8S_NAMESPACE
          value: {{ $root.Release.Namespace | quote }}
        - name: MLFLOW_TRACKING_URI
          value: http://shared-space:5000
        ports:
        - containerPort: 29901
        resources: {{- toYaml $root.Values.applications.rstudio.resources | nindent 10}}
        # resources: 
        #   requests:
        #     memory: 200Mi
        volumeMounts:
        - mountPath: /home/coder/
          name: user-disk
        - mountPath: /home/coder/project/
          name: user-disk
          subPath: project
        - mountPath: /home/coder/airflow/dags
          name: user-file-data
          subPath: dags
        - mountPath: /home/coder/airflow/plugins
          name: user-file-data
          subPath: plugins
        - mountPath: /home/coder/airflow/conf
          name: user-file-data
          subPath: conf
        - mountPath: /home/coder/airflow/worker-storage
          name: user-file-data
          subPath: worker-storage
        - mountPath: /home/coder/kaniko
          name: user-file-data
          subPath: kaniko
        - mountPath: /home/coder/shared
          name: shared-file
        - mountPath: /home/coder/airflow/logs
          name: user-file-logs
        imagePullPolicy: Always
      {{- end }}
      - name: airflow-webserver
        image: "{{ $root.Values.applications.airflow.image }}:{{ $root.Values.applications.airflow.tag }}"
        # command: ["sh", "-c", "airflow initdb
        #   && airflow create_user -r Admin -u admin -f admin -p admin -l default -e default
        #   && airflow webserver"]
        command: ["sh", "-c", "sleep 30 && airflow db upgrade && airflow webserver"]
        env:
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@{{lower .username}}-space:29432/airflow
        - name: AIRFLOW__CORE__FERNET_KEY
          value: hm2d6x0yCzwg7AmhsjIByJGtoP1ZpIdFBPZFFrPfxHw=
        - name: AIRFLOW__CORE__EXECUTOR
          value: KubernetesExecutor
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'False'
        - name: AIRFLOW__CORE__DEFAULT_IMPERSONATION
          value: airflow
        - name: AIRFLOW__LOGGING__BASE_LOG_FOLDER
          value: /opt/airflow/logs
        - name: AIRFLOW__LOGGING__REMOTE_LOGGING
          value: 'False'
        - name: AIRFLOW__WEBSERVER__RBAC
          value: 'False'
        - name: AIRFLOW__WEBSERVER__BASE_URL
          value: http://127.0.0.1:29903/home/airflow
        - name: AIRFLOW__WEBSERVER__WEB_SERVER_HOST
          value: '127.0.0.1'
        - name: AIRFLOW__WEBSERVER__WEB_SERVER_PORT
          value: '29903'
        - name: AIRFLOW__KUBERNETES__NAMESPACE
          value: {{ $root.Release.Namespace | quote }}
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY
          value: {{ $root.Values.applications.airflow.image }}
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG
          value: {{ $root.Values.applications.airflow.tag }}
        ports:
        - containerPort: 29903
        volumeMounts:
        - mountPath: /opt/airflow/dags
          name: user-file-data
          subPath: dags
        - mountPath: /opt/airflow/plugins
          name: user-file-data
          subPath: plugins
        - mountPath: /opt/airflow/conf
          name: user-file-data
          subPath: conf
        - mountPath: /opt/airflow/logs
          name: user-file-logs
        - mountPath: /opt/airflow/webserver_config.py
          name: airflow-webserver-config
          subPath: webserver_config.py
        imagePullPolicy: Always
      - name: airflow-scheduler
        image: "{{ $root.Values.applications.airflow.image }}:{{ $root.Values.applications.airflow.tag }}"
        command: ["sh", "-c", "sleep 60 && airflow scheduler"]
        env:
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@{{lower .username}}-space:29432/airflow
        - name: AIRFLOW__CORE__FERNET_KEY
          value: "hm2d6x0yCzwg7AmhsjIByJGtoP1ZpIdFBPZFFrPfxHw="
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'False'
        - name: AIRFLOW__CORE__DEFAULT_IMPERSONATION
          value: airflow
        - name: AIRFLOW__WEBSERVER__RBAC
          value: 'True'
        - name: AIRFLOW__CORE__EXECUTOR
          value: KubernetesExecutor
        - name: AIRFLOW__LOGGING__BASE_LOG_FOLDER
          value: /opt/airflow/logs
        - name: AIRFLOW__LOGGING__REMOTE_LOGGING
          value: 'False'
        - name: AIRFLOW__KUBERNETES__POD_TEMPLATE_FILE
          value: "/opt/airflow/pod_template.yml"
        - name: AIRFLOW__KUBERNETES__KUBE_CLIENT_REQUEST_ARGS
          value: '{"_request_timeout" : [50, 50]}'
        - name: AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL
          value: '60'
        - name: AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL
          value: '60'
        - name: AIRFLOW__SCHEDULER__PRINT_STATS_INTERVAL
          value: '30'
        # - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__AIRFLOW__CORE__FERNET_KEY
        #   value: "hm2d6x0yCzwg7AmhsjIByJGtoP1ZpIdFBPZFFrPfxHw="
        # - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__MEMCACHE_HOST
        #   value: {{lower .username}}-space
        # - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__AIRFLOW__CORE__DEFAULT_IMPERSONATION
        #   value: engineer
        - name: AIRFLOW__KUBERNETES__NAMESPACE
          value: {{ $root.Release.Namespace | quote }}
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY
          value: {{ $root.Values.applications.airflow.image }}
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG
          value: {{ $root.Values.applications.airflow.tag }}
        # - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_IMAGE_PULL_POLICY
        #   value: Always
        # - name: AIRFLOW__KUBERNETES__IMAGE_PULL_SECRETS
        #   value: {{lower .username}}-registry-secret{{range $root.Values.imagePullSecrets}},{{ required "A valid name secret!" .name }}{{end}}
        # - name: AIRFLOW__KUBERNETES__DAGS_VOLUME_CLAIM
        #   value: {{lower .username}}-file-data
        # - name: AIRFLOW__KUBERNETES__DAGS_VOLUME_SUBPATH
        #   value: dags
        # - name: AIRFLOW__KUBERNETES__LOGS_VOLUME_CLAIM
        #   value: {{lower .username}}-file-logs
        # - name: AIRFLOW__KUBERNETES__WORKER_SERVICE_ACCOUNT_NAME
        #   value: airflow-scheduler
        # - name: AIRFLOW__KUBERNETES__RUN_AS_USER
        #   value: '1000'
        # - name: AIRFLOW__KUBERNETES__FS_GROUP
        #   value: '1000'
        volumeMounts:
        - mountPath: /opt/airflow/dags
          name: user-file-data
          subPath: dags
        - mountPath: /opt/airflow/conf
          name: user-file-data
          subPath: conf
        - mountPath: /opt/airflow/plugins
          name: user-file-data
          subPath: plugins
        - mountPath: /opt/airflow/logs
          name: user-file-logs
        - mountPath: /opt/airflow/pod_template.yml
          name: airflow-pod-template
          subPath: pod_template.yml
        imagePullPolicy: Always
        resources: 
          requests:
            memory: 256Mi
      - name: memcached
        image: memcached
        ports:
        - containerPort: 11211
        resources: 
          requests:
            memory: 32Mi
      - name: firefox
        image: jlesage/firefox
        env:
        - name: DISPLAY_WIDTH
          value: '1920'
        - name: DISPLAY_HEIGHT
          value: '1080'
        ports:
        - containerPort: 5800
        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
        imagePullPolicy: Always
      # - name: registry
      #   image: registry:2
      #   env:
      #   - name: REGISTRY_AUTH
      #     value: htpasswd
      #   - name: REGISTRY_AUTH_HTPASSWD_REALM
      #     value: "Registry Realm"
      #   - name: REGISTRY_AUTH_HTPASSWD_PATH
      #     value: /auth/htpasswd
      #   - name: USER_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         name: {{lower .username}}-registry-secret
      #         key: password
      #   ports:
      #   - containerPort: 29500
      #   volumeMounts:
      #     - mountPath: /etc/docker/registry/config.yml
      #       subPath: config.yaml
      #       name: registry-cfg
      #     - mountPath: /auth
      #       name: user-disk
      #       subPath: auth
      #     - mountPath: /var/lib/registry
      #       name: user-disk
      #       subPath: docker-registry
      #   imagePullPolicy: Always
      - name: ws-tunnel
        image: raizenanalyticsdev.azurecr.io/ws-tunnel-server
        args: ['-addr', 'localhost:22', '-path', 'ssh']
        ports:
          - containerPort: 9191
      imagePullSecrets: {{- toYaml $root.Values.imagePullSecrets | nindent 8 }}
      {{- if .nodeSelector}}
      nodeSelector: {{- toYaml .nodeSelector | nindent 8}}
      {{- else if $root.Values.nodeSelector }}
      nodeSelector: {{- toYaml $root.Values.nodeSelector | nindent 8}}
      {{- end }}
      {{- if $root.Values.tolerations }}
      tolerations: {{- toYaml $root.Values.tolerations | nindent 8}}
      {{- end }}
      volumes:
        - name: user-disk
          persistentVolumeClaim:
            claimName: {{lower .username}}-disk
        - name: user-file-data
          persistentVolumeClaim:
            claimName: {{lower .username}}-file-data
        - name: user-file-logs
          persistentVolumeClaim:
            claimName: {{lower .username}}-file-logs
        - name: shared-file
          persistentVolumeClaim:
            claimName: shared-file
        - name: user-proxy-cfg
          configMap:
            name: {{lower .username}}-nginx-cfg
            items:
            - key: default.conf
              path: default.conf
        # - name: registry-cfg
        #   configMap:
        #     name: {{lower .username}}-registry-cfg
        #     items:
        #     - key: config.yaml
        #       path: config.yaml
        - name: user-apps-html
          configMap:
            name: {{lower .username}}-apps-html
            items:
            - key: index.html
              path: index.html
        # - name: registry-secret
        #   secret:
        #     secretName: {{lower .username}}-registry-secret
        #     items:
        #     - key: password
        #       path: password
        - name: airflow-pod-template
          configMap:
            name: {{lower .username}}-airflow-pod-template
            items:
            - key: pod_template.yml
              path: pod_template.yml
        - name: airflow-webserver-config
          configMap:
            name: airflow-webserver-config
            items:
            - key: webserver_config.py
              path: webserver_config.py
        - name: dshm
          emptyDir:
            medium: Memory
{{- end }}