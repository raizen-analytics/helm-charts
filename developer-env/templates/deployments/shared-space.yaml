apiVersion: apps/v1
kind: Deployment
metadata:
  name: shared-space
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: shared-space
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: shared-space
  template:
    metadata:
      labels:
        app: shared-space
    spec:
      serviceAccountName: controller
      automountServiceAccountToken: true
      containers:
      - name: mlflow
        image: {{ .Values.applications.mlflow.image }}
        command: ["mlflow", "server", "--host", "0.0.0.0", "--default-artifact-root", "ftp://admin:admin@shared-space", "--backend-store-uri", "sqlite:///mlflow.db"]
        volumeMounts:
          - mountPath: /home/engineer/mlflow/
            subPath: mlflow
            name: shared-disk
        ports:
        - containerPort: 5000
        imagePullPolicy: IfNotPresent
      {{- if .Values.applications.controller.enabled }}
      - name: controller
        image: {{ .Values.applications.controller.image }}
        ports:
        - containerPort: 5002
        resources: {{- toYaml .Values.applications.controller.resources | nindent 10}}
        imagePullPolicy: IfNotPresent
      {{- end }}
      - name: ftp-server
        image: stilliard/pure-ftpd
        env:
        - name: PUBLICHOST
          value: shared-space
        - name: FTP_USER_NAME
          value: admin
        - name: FTP_USER_PASS
          value: admin
        - name: FTP_USER_HOME
          value: /home/admin
        volumeMounts:
          - mountPath: /home/admin/
            subPath: ftp
            name: shared-disk
      - name: memcache
        image: memcached
        ports:
        - containerPort: 11211
        resources: 
          requests:
            memory: 32Mi
        restartPolicy: Always
      - name: airflow-scheduler
        image: "{{ .Values.applications.airflow.image }}:{{ .Values.applications.airflow.tag }}"
        command: ["sh", "-c", "sleep 60 && airflow scheduler"]
        env:
        #- name: AIRFLOW__LOGGING__LOGGING_LEVEL
          #value: 'DEBUG'
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
        - name: AIRFLOW__CORE__FERNET_KEY
          value: "hm2d6x0yCzwg7AmhsjIByJGtoP1ZpIdFBPZFFrPfxHw="
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'False'
        - name: AIRFLOW__CORE__DEFAULT_IMPERSONATION
          value: airflow
        - name: AIRFLOW__WEBSERVER__RBAC
          value: 'True'
        - name: AIRFLOW__CORE__EXECUTOR
          value: KubernetesExecutor
        - name: AIRFLOW__LOGGING__BASE_LOG_FOLDER
          value: /opt/airflow/logs
        - name: AIRFLOW__LOGGING__REMOTE_LOGGING
          value: 'False'
        - name: AIRFLOW__KUBERNETES__POD_TEMPLATE_FILE
          value: "/opt/airflow/pod_template.yml"
        - name: AIRFLOW__KUBERNETES__KUBE_CLIENT_REQUEST_ARGS
          value: '{"_request_timeout" : [50, 50]}'
        - name: AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL
          value: '60'
        - name: AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL
          value: '60'
        - name: AIRFLOW__SCHEDULER__PRINT_STATS_INTERVAL
          value: '30'
        - name: AIRFLOW__KUBERNETES__NAMESPACE
          value: {{ .Release.Namespace | quote }}
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY
          value: {{ .Values.applications.airflow.image }}
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG
          value: {{ .Values.applications.airflow.tag }}
        volumeMounts:
        - mountPath: /opt/airflow/dags
          name: airflow-dags
          subPath: dags
        - mountPath: /opt/airflow/logs
          name: airflow-logs
        imagePullPolicy: IfNotPresent
        resources: 
          requests:
            memory: 256Mi
      - name: airflow-webserver 
        image: "{{ .Values.applications.airflow.image }}:{{ .Values.applications.airflow.tag }}"
        command: ["sh", "-c", "sleep 30 && airflow db migrate && airflow webserver"]
        env:
        - name: AIRFLOW__LOGGING__LOGGING_LEVEL
          value: 'DEBUG'
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
        - name: AIRFLOW__CORE__FERNET_KEY
          value: hm2d6x0yCzwg7AmhsjIByJGtoP1ZpIdFBPZFFrPfxHw=
        - name: AIRFLOW__CORE__EXECUTOR
          value: KubernetesExecutor
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'False'
        - name: AIRFLOW__CORE__DEFAULT_IMPERSONATION
          value: airflow
        - name: AIRFLOW__LOGGING__BASE_LOG_FOLDER
          value: /opt/airflow/logs
        - name: AIRFLOW__LOGGING__REMOTE_LOGGING
          value: 'False'
        - name: AIRFLOW__WEBSERVER__RBAC
          value: 'False'
        - name: AIRFLOW__WEBSERVER__BASE_URL
          value: http://127.0.0.1:29903/airflow
        - name: AIRFLOW__WEBSERVER__WEB_SERVER_HOST
          value: '127.0.0.1'
        - name: AIRFLOW__WEBSERVER__WEB_SERVER_PORT
          value: '29903'
        - name: AIRFLOW__API__AUTH_BACKENDS
          value: airflow.api.auth.backend.default
        - name: AIRFLOW__WEBSERVER__INSTANCE_NAME
          value: 'DEV'
        - name: AIRFLOW__WEBSERVER__NAVBAR_COLOR
          value: '#ccedfc'
        - name: AIRFLOW__KUBERNETES__NAMESPACE
          value: {{ .Release.Namespace | quote }}
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY
          value: {{ .Values.applications.airflow.image }}
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG
          value: {{ .Values.applications.airflow.tag }}
        volumeMounts:
        - mountPath: /opt/airflow/dags
          name: airflow-dags
          subPath: dags
        - mountPath: /opt/airflow/logs
          name: airflow-logs
        imagePullPolicy: IfNotPresent
        resources: 
          requests:
            memory: 32Mi
      restartPolicy: Always
        ports:
        - containerPort: 21
        - containerPort: 30000
        - containerPort: 30001
        - containerPort: 30002
        - containerPort: 30003
        - containerPort: 30004
        - containerPort: 30005
        - containerPort: 30006
        - containerPort: 30007
        - containerPort: 30008
        - containerPort: 30009
        - containerPort: 29903
        - containerPort: 11211
      imagePullSecrets: {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8}}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- toYaml .Values.tolerations | nindent 8}}
      {{- end }}
      volumes:
        - name: shared-disk
          persistentVolumeClaim:
            claimName: shared-disk
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags
        - name: airflow-logs
          persistentVolumeClaim:
              claimName: airflow-logs
