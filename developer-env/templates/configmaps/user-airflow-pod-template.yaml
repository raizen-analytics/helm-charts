{{- $root := . -}}
{{- range .Values.users }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{lower .username}}-airflow-pod-template
  namespace: {{ $root.Release.Namespace | quote }}
data:
  # yamllint disable rule:line-length
  pod_template.yml: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: dummy-name
      namespace: {{ $root.Release.Namespace | quote }}
    spec:
      initContainers:
        - name: init-myservice
        image: busybox:1.33
        command: ['sh', '-c', "chown -R 50000:50000 /opt/airflow/logs"]
        volumeMounts:
        - mountPath: "/opt/airflow/logs"
          name: airflow-logs
          subPath: logs
      containers:
        - args: []
          command: []
          env:
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            # Hard Coded Airflow Envs
            - name: AIRFLOW__CORE__FERNET_KEY
              value: "hm2d6x0yCzwg7AmhsjIByJGtoP1ZpIdFBPZFFrPfxHw="
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: postgresql+psycopg2://airflow:airflow@{{lower .username}}-space:29432/airflow
            - name: MEMCACHE_HOST
              value: {{lower .username}}-space
            - name: AIRFLOW__CORE__DEFAULT_IMPERSONATION
              value: airflow
            - name: AIRFLOW__LOGGING__BASE_LOG_FOLDER
              value: /opt/airflow/logs
            - name: AIRFLOW__LOGGING__REMOTE_LOGGING
              value: 'False'
          envFrom: []
          image: "{{ $root.Values.applications.airflow.image }}:{{ $root.Values.applications.airflow.tag }}"
          imagePullPolicy: Always
          name: base
          ports: []
          volumeMounts:
            - mountPath: "/opt/airflow/logs"
              name: airflow-logs
              subPath: logs
            - mountPath: /opt/airflow/dags
              name: airflow-dags
              subPath: dags
      imagePullSecrets: {{- toYaml $root.Values.imagePullSecrets | nindent 8 }}
      hostNetwork: false
      restartPolicy: Never
      # securityContext:
      #   runAsUser: 50000
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      serviceAccountName: airflow-scheduler
      volumes:
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: {{lower .username}}-file-data
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: {{lower .username}}-file-logs
{{- end }}